var search_data = {"index":{"searchIndex":["shipcompliant","addupdateproduct","addupdateproductresult","address","baseresult","checkcompliance","checkcomplianceresult","client","commitsalesorder","commitsalesorderresult","compliancerule","configuration","errorresult","freightsalestaxrate","getinventorydetails","getinventorydetailsresult","inventoryproduct","ordersearch","productattributes","productsalestaxrate","salestaxrate","searchsalesordersummary","searchsalesorders","searchsalesordersresult","shipmentcompliance","shipmentsalestaxrate","suggestedaddress","voidsalesorder","voidsalesorderresult","address_validation_result()","brand_key()","by_order_key()","call()","call()","call()","city()","client()","code()","committed_shipments()","compliance_description()","compliance_rules_for_shipment()","compliant?()","compliant?()","compliant?()","configure()","county()","credentials()","default_case()","description()","details()","error_count()","errors()","errors_count()","failure?()","find_by()","fulfillment_sku()","inventory_levels()","key()","length()","license_relationship()","location()","locations()","message()","new()","new()","of_sales_order()","order_key()","parts()","percent_alcohol()","product()","product_key()","product_key()","product_type()","products_for_location()","purchase_date()","recommended_tax_due()","remaining_orders_length()","rule_description()","rule_type()","rules()","sales_order_key()","sales_tax_due()","sales_tax_rate()","savon_call()","shipment_compliance_rules()","shipment_key()","shipment_sales_tax_rates()","shipment_summary()","shipments()","state()","street1()","street2()","success?()","suggested_address()","summaries()","target()","taxes_for_product()","taxes_for_shipment()","to_h()","to_h()","type()","unit_price()","vintage()","volume_amount()","volume_ml()","volume_unit()","wsdl=()","zip1()","zip2()","readme"],"longSearchIndex":["shipcompliant","shipcompliant::addupdateproduct","shipcompliant::addupdateproductresult","shipcompliant::address","shipcompliant::baseresult","shipcompliant::checkcompliance","shipcompliant::checkcomplianceresult","shipcompliant::client","shipcompliant::commitsalesorder","shipcompliant::commitsalesorderresult","shipcompliant::compliancerule","shipcompliant::configuration","shipcompliant::errorresult","shipcompliant::freightsalestaxrate","shipcompliant::getinventorydetails","shipcompliant::getinventorydetailsresult","shipcompliant::inventoryproduct","shipcompliant::ordersearch","shipcompliant::productattributes","shipcompliant::productsalestaxrate","shipcompliant::salestaxrate","shipcompliant::searchsalesordersummary","shipcompliant::searchsalesorders","shipcompliant::searchsalesordersresult","shipcompliant::shipmentcompliance","shipcompliant::shipmentsalestaxrate","shipcompliant::suggestedaddress","shipcompliant::voidsalesorder","shipcompliant::voidsalesorderresult","shipcompliant::checkcomplianceresult#address_validation_result()","shipcompliant::productsalestaxrate#brand_key()","shipcompliant::voidsalesorder::by_order_key()","shipcompliant::client#call()","shipcompliant::commitsalesorder::call()","shipcompliant::getinventorydetails::call()","shipcompliant::address#city()","shipcompliant::client()","shipcompliant::errorresult#code()","shipcompliant::commitsalesorderresult#committed_shipments()","shipcompliant::compliancerule#compliance_description()","shipcompliant::checkcomplianceresult#compliance_rules_for_shipment()","shipcompliant::checkcomplianceresult#compliant?()","shipcompliant::compliancerule#compliant?()","shipcompliant::shipmentcompliance#compliant?()","shipcompliant::configure()","shipcompliant::address#county()","shipcompliant::configuration#credentials()","shipcompliant::inventoryproduct#default_case()","shipcompliant::inventoryproduct#description()","shipcompliant::suggestedaddress#details()","shipcompliant::baseresult#error_count()","shipcompliant::baseresult#errors()","shipcompliant::baseresult#errors_count()","shipcompliant::baseresult#failure?()","shipcompliant::searchsalesorders::find_by()","shipcompliant::inventoryproduct#fulfillment_sku()","shipcompliant::inventoryproduct#inventory_levels()","shipcompliant::errorresult#key()","shipcompliant::searchsalesordersresult#length()","shipcompliant::compliancerule#license_relationship()","shipcompliant::getinventorydetailsresult#location()","shipcompliant::getinventorydetailsresult#locations()","shipcompliant::errorresult#message()","shipcompliant::configuration::new()","shipcompliant::searchsalesordersresult::new()","shipcompliant::checkcompliance::of_sales_order()","shipcompliant::searchsalesordersummary#order_key()","shipcompliant::suggestedaddress#parts()","shipcompliant::inventoryproduct#percent_alcohol()","shipcompliant::addupdateproduct::product()","shipcompliant::inventoryproduct#product_key()","shipcompliant::productsalestaxrate#product_key()","shipcompliant::inventoryproduct#product_type()","shipcompliant::getinventorydetailsresult#products_for_location()","shipcompliant::searchsalesordersummary#purchase_date()","shipcompliant::checkcomplianceresult#recommended_tax_due()","shipcompliant::searchsalesordersresult#remaining_orders_length()","shipcompliant::compliancerule#rule_description()","shipcompliant::compliancerule#rule_type()","shipcompliant::shipmentcompliance#rules()","shipcompliant::searchsalesordersummary#sales_order_key()","shipcompliant::salestaxrate#sales_tax_due()","shipcompliant::salestaxrate#sales_tax_rate()","shipcompliant::client#savon_call()","shipcompliant::checkcomplianceresult#shipment_compliance_rules()","shipcompliant::shipmentcompliance#shipment_key()","shipcompliant::checkcomplianceresult#shipment_sales_tax_rates()","shipcompliant::searchsalesordersummary#shipment_summary()","shipcompliant::commitsalesorderresult#shipments()","shipcompliant::address#state()","shipcompliant::address#street1()","shipcompliant::address#street2()","shipcompliant::baseresult#success?()","shipcompliant::checkcomplianceresult#suggested_address()","shipcompliant::searchsalesordersresult#summaries()","shipcompliant::errorresult#target()","shipcompliant::shipmentsalestaxrate#taxes_for_product()","shipcompliant::checkcomplianceresult#taxes_for_shipment()","shipcompliant::ordersearch#to_h()","shipcompliant::productattributes#to_h()","shipcompliant::errorresult#type()","shipcompliant::inventoryproduct#unit_price()","shipcompliant::inventoryproduct#vintage()","shipcompliant::inventoryproduct#volume_amount()","shipcompliant::inventoryproduct#volume_ml()","shipcompliant::inventoryproduct#volume_unit()","shipcompliant::wsdl=()","shipcompliant::address#zip1()","shipcompliant::address#zip2()",""],"info":[["ShipCompliant","","classes/ShipCompliant.html","",""],["ShipCompliant::AddUpdateProduct","","classes/ShipCompliant/AddUpdateProduct.html","","<p>ShipCompliant::AddUpdateProduct\n<p>This method checks to see if a product with the same product key and brand\n…\n"],["ShipCompliant::AddUpdateProductResult","","classes/ShipCompliant/AddUpdateProductResult.html","",""],["ShipCompliant::Address","","classes/ShipCompliant/Address.html","","<p>ShipCompliant::Address\n<p>This is a value object that wraps an address node. <code>BillTo</code> and\n<code>ShipTo</code>.\n\n<pre><code>address = ...</code></pre>\n"],["ShipCompliant::BaseResult","","classes/ShipCompliant/BaseResult.html","","<p>ShipCompliant::BaseResult\n<p>This class provides methods to are relevant to every API request. All\nrequests …\n"],["ShipCompliant::CheckCompliance","","classes/ShipCompliant/CheckCompliance.html","","<p>ShipCompliant::CheckCompliance\n<p>The CheckComplianceOfSalesOrderWithAddressValidation API method is used …\n"],["ShipCompliant::CheckComplianceResult","","classes/ShipCompliant/CheckComplianceResult.html","","<p>ShipCompliant::CheckComplianceResult\n<p>CheckComplianceResult wraps the response from the\n<code>CheckComplianceOfSalesOrderWithAddressValidation</code> …\n"],["ShipCompliant::Client","","classes/ShipCompliant/Client.html","",""],["ShipCompliant::CommitSalesOrder","","classes/ShipCompliant/CommitSalesOrder.html","","<p>ShipCompliant::CommitSalesOrder\n<p>This method takes in a Sales Order Key in the request and saves the order …\n"],["ShipCompliant::CommitSalesOrderResult","","classes/ShipCompliant/CommitSalesOrderResult.html","","<p>ShipCompliant::CommitSalesOrderResult\n<p>Wraps the response of <code>CommitSalesOrder</code> and provides methods to\nquickly …\n"],["ShipCompliant::ComplianceRule","","classes/ShipCompliant/ComplianceRule.html","",""],["ShipCompliant::Configuration","","classes/ShipCompliant/Configuration.html","","<p>Stores runtime configuration to authenticate user.\n\n<pre><code>ShipCompliant.configure do |c|\n  c.partner_key = &#39;XXXX-XX-XXXXX&#39; ...\n</code></pre>\n"],["ShipCompliant::ErrorResult","","classes/ShipCompliant/ErrorResult.html","",""],["ShipCompliant::FreightSalesTaxRate","","classes/ShipCompliant/FreightSalesTaxRate.html","","<p>ShipCompliant::FreightSalesTaxRate\n<p>FreightSalesTaxRate wraps the SalesTaxRate value object. It currently …\n"],["ShipCompliant::GetInventoryDetails","","classes/ShipCompliant/GetInventoryDetails.html","","<p>ShipCompliant::GetInventoryDetails\n<p>Provides inventory details for each Product on a Fulfillment Location …\n"],["ShipCompliant::GetInventoryDetailsResult","","classes/ShipCompliant/GetInventoryDetailsResult.html","","<p>ShipCompliant::GetInventoryDetailsResult\n<p>Wraps the result of <code>GetInventoryDetails</code> and provides methods …\n"],["ShipCompliant::InventoryProduct","","classes/ShipCompliant/InventoryProduct.html","","<p>ShipCompliant::InventoryProduct\n<p>InventoryProduct is a value object that has methods to access product …\n"],["ShipCompliant::OrderSearch","","classes/ShipCompliant/OrderSearch.html","","<p>ShipCompliant::OrderSearch\n<p>Acts as a hash for adding search criteria to the\n<code>SearchSalesOrders</code> API endpoint. …\n"],["ShipCompliant::ProductAttributes","","classes/ShipCompliant/ProductAttributes.html","","<p>ShipCompliant::ProductAttributes\n<p>Acts as a hash for working with the <code>AddUpdateProduct</code> API\nendpoint.\n\n<pre><code>attributes ...</code></pre>\n"],["ShipCompliant::ProductSalesTaxRate","","classes/ShipCompliant/ProductSalesTaxRate.html","","<p>ShipCompliant::ProductSalesTaxRate\n<p>ProductSalesTaxRate wraps the SalesTaxRate value object. It provides …\n"],["ShipCompliant::SalesTaxRate","","classes/ShipCompliant/SalesTaxRate.html","","<p>ShipCompliant::SalesTaxRate\n<p>SalesTaxRate is a value object to store sales tax information for freight …\n"],["ShipCompliant::SearchSalesOrderSummary","","classes/ShipCompliant/SearchSalesOrderSummary.html","","<p>ShipCompliant::SearchSalesOrderSummary\n<p>Wraps the <code>SalesOrderSummary</code> hash with a simple DSL to provide\neasy …\n"],["ShipCompliant::SearchSalesOrders","","classes/ShipCompliant/SearchSalesOrders.html","","<p>ShipCompliant::SearchSalesOrders\n<p>Search orders in the ShipCompliant database on a number of different …\n"],["ShipCompliant::SearchSalesOrdersResult","","classes/ShipCompliant/SearchSalesOrdersResult.html","","<p>An API wrapper for <code>SearchSalesOrders</code> response.\n<p>Converts fields into integers and ensures <code>order_summaries</code> …\n"],["ShipCompliant::ShipmentCompliance","","classes/ShipCompliant/ShipmentCompliance.html","","<p>ShipCompliant::ShipmentCompliance\n<p>Wrap the <code>ShipmentComplianceResponse</code> node.\n"],["ShipCompliant::ShipmentSalesTaxRate","","classes/ShipCompliant/ShipmentSalesTaxRate.html","","<p>ShipCompliant::ShipmentSalesTaxRate\n<p>ShipmentSalesTaxRate gives access about a shipment&#39;s freight and …\n"],["ShipCompliant::SuggestedAddress","","classes/ShipCompliant/SuggestedAddress.html","","<p>ShipCompliant::SuggestedAddress\n<p>This is a value object that wraps the <code>SuggestedAddress</code> node.\nIt inherits …\n"],["ShipCompliant::VoidSalesOrder","","classes/ShipCompliant/VoidSalesOrder.html","","<p>ShipCompliant::VoidSalesOrder\n<p>This method takes in a sales order key and voids all shipments in an\nexisting …\n"],["ShipCompliant::VoidSalesOrderResult","","classes/ShipCompliant/VoidSalesOrderResult.html","","<p>ShipCompliant::VoidSalesOrderResult\n<p>This class provides methods to easily get the result of voiding a …\n"],["address_validation_result","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-address_validation_result","()","<p>Returns the <code>AddressValidationResult</code>.\n"],["brand_key","ShipCompliant::ProductSalesTaxRate","classes/ShipCompliant/ProductSalesTaxRate.html#method-i-brand_key","()","<p>Returns the product&#39;s brand key.\n\n<pre><code>product_tax_rate.brand_key #=&gt; &#39;BrandKey123&#39;\n</code></pre>\n"],["by_order_key","ShipCompliant::VoidSalesOrder","classes/ShipCompliant/VoidSalesOrder.html#method-c-by_order_key","(order_key)","<p>Takes an sales order key and makes a request to void it in the system.\n<p>Returns an instance of ShipCompliant::VoidSalesOrderResult …\n"],["call","ShipCompliant::Client","classes/ShipCompliant/Client.html#method-i-call","(operation, locals = {})","<p>Adds the required security credentials and formats the message to match the\nShipCompliant structure. …\n"],["call","ShipCompliant::CommitSalesOrder","classes/ShipCompliant/CommitSalesOrder.html#method-c-call","(commit_data)","<p>Marks a SalesOrder as committed.\n<p>Returns an instance of ShipCompliant::CommitSalesOrderResult.\n\n<pre><code>ShipCompliant::CommitSalesOrder.call({ ...</code></pre>\n"],["call","ShipCompliant::GetInventoryDetails","classes/ShipCompliant/GetInventoryDetails.html#method-c-call","(query = {})","<p>Returns inventory details for the specified criteria. The method may be\ncalled without any parameters …\n"],["city","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-city","()","<p>Returns the suggested city.\n"],["client","ShipCompliant","classes/ShipCompliant.html#method-c-client","()","<p>Returns an instance of <code>Client</code>.\n"],["code","ShipCompliant::ErrorResult","classes/ShipCompliant/ErrorResult.html#method-i-code","()","<p>Gets the error code as an integer.\n\n<pre><code>puts &quot;ERROR ##{error.code}&quot; #=&gt; 404\n</code></pre>\n"],["committed_shipments","ShipCompliant::CommitSalesOrderResult","classes/ShipCompliant/CommitSalesOrderResult.html#method-i-committed_shipments","()","<p>Gets the keys for committed shipments.\n\n<pre><code>puts result.committed_shipments #=&gt; [&#39;SHIPMENT-1&#39;, &#39;SHIPMENT-2&#39;, ...\n</code></pre>\n"],["compliance_description","ShipCompliant::ComplianceRule","classes/ShipCompliant/ComplianceRule.html#method-i-compliance_description","()","<p>Returns the <code>ComplianceDescription</code>.\n"],["compliance_rules_for_shipment","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-compliance_rules_for_shipment","(shipment_key)","<p>Finds all the compliance rules for a shipment. Returns an instance of\nShipmentCompliance.\n\n<pre><code>shipment_compliance ...</code></pre>\n"],["compliant?","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-compliant-3F","()","<p>Returns true if all shipments of a SalesOrder are compliant.\n"],["compliant?","ShipCompliant::ComplianceRule","classes/ShipCompliant/ComplianceRule.html#method-i-compliant-3F","()","<p>Checks if the current compliance rule was met.\n"],["compliant?","ShipCompliant::ShipmentCompliance","classes/ShipCompliant/ShipmentCompliance.html#method-i-compliant-3F","()","<p>Checks if the shipment was compliant.\n"],["configure","ShipCompliant","classes/ShipCompliant.html#method-c-configure","()",""],["county","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-county","()","<p>Returns the suggested county.\n"],["credentials","ShipCompliant::Configuration","classes/ShipCompliant/Configuration.html#method-i-credentials","()","<p>Returns a <code>Hash</code> for authenticating each API request.\n\n<pre><code>{\n  &#39;PartnerKey&#39; =&gt; &#39;XXXX-XX-XXXXX&#39;,\n  &#39;Username&#39; ...\n</code></pre>\n"],["default_case","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-default_case","()","<p>Returns the <code>DefaultCase</code> of a product.\n"],["description","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-description","()","<p>Returns the <code>Description</code> of a product.\n"],["details","ShipCompliant::SuggestedAddress","classes/ShipCompliant/SuggestedAddress.html#method-i-details","()","<p>Returns a Hash of the address location details.\n<p><code>city_abbreviation</code>\n<p><code>congressional_district</code>\n"],["error_count","ShipCompliant::BaseResult","classes/ShipCompliant/BaseResult.html#method-i-error_count","()",""],["errors","ShipCompliant::BaseResult","classes/ShipCompliant/BaseResult.html#method-i-errors","()","<p>An array of <code>ErrorResult</code> items or an empty array if the\nresponse was successful.\n\n<pre><code>result.errors.each do ...</code></pre>\n"],["errors_count","ShipCompliant::BaseResult","classes/ShipCompliant/BaseResult.html#method-i-errors_count","()","<p>The number of errors in the response.\n"],["failure?","ShipCompliant::BaseResult","classes/ShipCompliant/BaseResult.html#method-i-failure-3F","()","<p>Returns true if order failed to be voided.\n\n<pre><code>puts &quot;FAILED&quot; if result.failure?</code></pre>\n"],["find_by","ShipCompliant::SearchSalesOrders","classes/ShipCompliant/SearchSalesOrders.html#method-c-find_by","(query)","<p><code>query</code> must be a Hash with the keys relating to each search\ncriteria.\n<p>To see a list of available keys take …\n"],["fulfillment_sku","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-fulfillment_sku","()","<p>Returns the <code>FulfillmentSku</code> of a product.\n"],["inventory_levels","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-inventory_levels","()","<p>Returns a Hash of inventory levels.\n<p>The key is the <code>InventoryType</code>.\n<p>The value is <code>Quantity</code> as a float.\n"],["key","ShipCompliant::ErrorResult","classes/ShipCompliant/ErrorResult.html#method-i-key","()","<p>Gets the key of the item with an error.\n\n<pre><code>puts error.key #=&gt; &#39;ORDER-123&#39;\n</code></pre>\n"],["length","ShipCompliant::SearchSalesOrdersResult","classes/ShipCompliant/SearchSalesOrdersResult.html#method-i-length","()","<p>The number of orders returned the current response.\n"],["license_relationship","ShipCompliant::ComplianceRule","classes/ShipCompliant/ComplianceRule.html#method-i-license_relationship","()","<p>Returns the <code>LicenseRelationship</code>.\n"],["location","ShipCompliant::GetInventoryDetailsResult","classes/ShipCompliant/GetInventoryDetailsResult.html#method-i-location","(key)","<p>Finds a location by <code>FulfillmentLocation</code>.\n\n<pre><code>result.location(&#39;WineShipping&#39;)[:supplier] #=&gt; &#39;LOCATION-SUPPLIER&#39;\n</code></pre>\n"],["locations","ShipCompliant::GetInventoryDetailsResult","classes/ShipCompliant/GetInventoryDetailsResult.html#method-i-locations","()","<p>Returns an array of <code>InventoryLocation</code> nodes.\n\n<pre><code>result.locations[0][:sub_inventory_code] #=&gt; &#39;SUB-CODE&#39;\n</code></pre>\n"],["message","ShipCompliant::ErrorResult","classes/ShipCompliant/ErrorResult.html#method-i-message","()","<p>Gets the error message.\n\n<pre><code>puts &quot;ERROR: #{error.message}&quot; #=&gt; &#39;I don&#39;t think it&#39;s a good idea,\nYogi&#39;\n</code></pre>\n"],["new","ShipCompliant::Configuration","classes/ShipCompliant/Configuration.html#method-c-new","()",""],["new","ShipCompliant::SearchSalesOrdersResult","classes/ShipCompliant/SearchSalesOrdersResult.html#method-c-new","(data)",""],["of_sales_order","ShipCompliant::CheckCompliance","classes/ShipCompliant/CheckCompliance.html#method-c-of_sales_order","(data)","<p>Checks the compliance of a sales order from the data specified.\n<p>An example of all the required fields …\n"],["order_key","ShipCompliant::SearchSalesOrderSummary","classes/ShipCompliant/SearchSalesOrderSummary.html#method-i-order_key","()","<p>Returns the <code>sales_order_key</code>\n"],["parts","ShipCompliant::SuggestedAddress","classes/ShipCompliant/SuggestedAddress.html#method-i-parts","()","<p>Returns a Hash of the address parts.\n<p><code>company</code>\n<p><code>mail_box_name</code>\n"],["percent_alcohol","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-percent_alcohol","()","<p>Returns the <code>PercentAlcohol</code> of a product as a float.\n"],["product","ShipCompliant::AddUpdateProduct","classes/ShipCompliant/AddUpdateProduct.html#method-c-product","(product, options = {})","<p>Adds or updates product depending on <code>:update_mode</code>.\n<p><code>product</code> parameter must be a Hash. The keys must be …\n"],["product_key","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-product_key","()","<p>Returns the <code>ProductKey</code> of a product.\n"],["product_key","ShipCompliant::ProductSalesTaxRate","classes/ShipCompliant/ProductSalesTaxRate.html#method-i-product_key","()","<p>Returns the product&#39;s key.\n\n<pre><code>product_tax_rate.product_key #=&gt; &#39;ProductKey123&#39;\n</code></pre>\n"],["product_type","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-product_type","()","<p>Returns the <code>ProductType</code> of a product.\n"],["products_for_location","ShipCompliant::GetInventoryDetailsResult","classes/ShipCompliant/GetInventoryDetailsResult.html#method-i-products_for_location","(key)","<p>Returns an array of ShipCompliant::InventoryProduct.\n\n<pre><code>result.products_for_location(&#39;WineShipping&#39;).each ...</code></pre>\n"],["purchase_date","ShipCompliant::SearchSalesOrderSummary","classes/ShipCompliant/SearchSalesOrderSummary.html#method-i-purchase_date","()","<p>Returns a <code>DateTime</code> from the order <code>purchase_date</code>\n"],["recommended_tax_due","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-recommended_tax_due","()","<p>Returns a float of the recommended sales tax due for a SalesOrder.\n"],["remaining_orders_length","ShipCompliant::SearchSalesOrdersResult","classes/ShipCompliant/SearchSalesOrdersResult.html#method-i-remaining_orders_length","()","<p>The number of orders waiting to be returned. Use this for paging results.\n"],["rule_description","ShipCompliant::ComplianceRule","classes/ShipCompliant/ComplianceRule.html#method-i-rule_description","()","<p>Returns the <code>RuleDescription</code>.\n"],["rule_type","ShipCompliant::ComplianceRule","classes/ShipCompliant/ComplianceRule.html#method-i-rule_type","()","<p>Returns the <code>RuleType</code>.\n"],["rules","ShipCompliant::ShipmentCompliance","classes/ShipCompliant/ShipmentCompliance.html#method-i-rules","()","<p>Wraps the <code>RuleComplianceResponse</code> nodes with ComplianceRule.\n\n<pre><code>compliance_errors = shipment.rules.reject ...</code></pre>\n"],["sales_order_key","ShipCompliant::SearchSalesOrderSummary","classes/ShipCompliant/SearchSalesOrderSummary.html#method-i-sales_order_key","()",""],["sales_tax_due","ShipCompliant::SalesTaxRate","classes/ShipCompliant/SalesTaxRate.html#method-i-sales_tax_due","()","<p>Returns the <code>sales_tax_due</code> as a float.\n"],["sales_tax_rate","ShipCompliant::SalesTaxRate","classes/ShipCompliant/SalesTaxRate.html#method-i-sales_tax_rate","()","<p>Returns the <code>sales_tax_rate</code> as a float.\n"],["savon_call","ShipCompliant::Client","classes/ShipCompliant/Client.html#method-i-savon_call","(operation, locals = {})","<p>“Backup” original #call from Savon::Client\n"],["shipment_compliance_rules","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-shipment_compliance_rules","()","<p>Returns an array of the <code>ShipmentComplianceResponse</code> node as a\nHash.\n\n<pre><code>compliance_result.shipment_compliance_rules.each ...</code></pre>\n"],["shipment_key","ShipCompliant::ShipmentCompliance","classes/ShipCompliant/ShipmentCompliance.html#method-i-shipment_key","()","<p>Returns the shipment key.\n"],["shipment_sales_tax_rates","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-shipment_sales_tax_rates","()","<p>This method returns an Array containing information about each shipment of\na SalesOrder.\n"],["shipment_summary","ShipCompliant::SearchSalesOrderSummary","classes/ShipCompliant/SearchSalesOrderSummary.html#method-i-shipment_summary","()","<p>Returns the parsed hash from the <code>ShipmentSummary</code> element.\n\n<pre><code>{\n  compliance: &#39;ValueHere&#39;,\n  requested_ship_date: ...</code></pre>\n"],["shipments","ShipCompliant::CommitSalesOrderResult","classes/ShipCompliant/CommitSalesOrderResult.html#method-i-shipments","()","<p>Returns an array of shipment objects.\n\n<pre><code>puts result.shipments #=&gt; [\n  {\n    key: &#39;SHIPMENT-KEY&#39;,\n    is_committed: ...\n</code></pre>\n"],["state","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-state","()","<p>Returns the suggested state.\n"],["street1","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-street1","()","<p>Returns the suggested street.\n"],["street2","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-street2","()","<p>Returns the suggested street line 2.\n"],["success?","ShipCompliant::BaseResult","classes/ShipCompliant/BaseResult.html#method-i-success-3F","()","<p>Returns boolean whether order was successfully voided.\n\n<pre><code>puts &quot;SUCCESS&quot; if result.success?</code></pre>\n"],["suggested_address","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-suggested_address","()","<p>Returns an instance of ShipCompliant::SuggestedAddress.\n"],["summaries","ShipCompliant::SearchSalesOrdersResult","classes/ShipCompliant/SearchSalesOrdersResult.html#method-i-summaries","()","<p>Returns an array of ShipCompliant::SearchSalesOrderSummary. Use this to get\ninformation about each order. …\n"],["target","ShipCompliant::ErrorResult","classes/ShipCompliant/ErrorResult.html#method-i-target","()","<p>The object type that had the error.\n\n<pre><code>puts error.target #=&gt; &#39;SalesOrder&#39;\n</code></pre>\n"],["taxes_for_product","ShipCompliant::ShipmentSalesTaxRate","classes/ShipCompliant/ShipmentSalesTaxRate.html#method-i-taxes_for_product","(product_key)",""],["taxes_for_shipment","ShipCompliant::CheckComplianceResult","classes/ShipCompliant/CheckComplianceResult.html#method-i-taxes_for_shipment","(shipment_key)","<p>Access the tax information for a shipment. Returns an instance of\nShipmentSalesTaxRate.\n"],["to_h","ShipCompliant::OrderSearch","classes/ShipCompliant/OrderSearch.html#method-i-to_h","()","<p>Converts hash keys to Pascal case and rejects invalid keys.\n\n<pre><code>:sales_order_keys #=&gt; &#39;SalesOrderKeys&#39;\n</code></pre>\n"],["to_h","ShipCompliant::ProductAttributes","classes/ShipCompliant/ProductAttributes.html#method-i-to_h","()","<p>Converts hash keys to Pascal case and handles special cases.\n\n<pre><code>:bottle_size_ml #=&gt; &#39;BottleSizeML&#39;\n</code></pre>\n"],["type","ShipCompliant::ErrorResult","classes/ShipCompliant/ErrorResult.html#method-i-type","()","<p>The type of error that occured.\n\n<pre><code>puts error.type #=&gt; &#39;Validation&#39;\n</code></pre>\n"],["unit_price","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-unit_price","()","<p>Returns the <code>UnitPrice</code> of a product as a float.\n"],["vintage","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-vintage","()","<p>Returns the <code>Vintage</code> of a product as an integer.\n"],["volume_amount","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-volume_amount","()","<p>Returns the <code>VolumeAmount</code> of a product as a float.\n"],["volume_ml","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-volume_ml","()","<p>Returns the <code>VolumeML</code> of a product as a float.\n"],["volume_unit","ShipCompliant::InventoryProduct","classes/ShipCompliant/InventoryProduct.html#method-i-volume_unit","()","<p>Returns the <code>VolumeUnit</code> of a product.\n"],["wsdl=","ShipCompliant","classes/ShipCompliant.html#method-c-wsdl-3D","(wsdl)","<p>Replaces #client with custom WSDL\n\n<pre><code>ShipCompliant.wsdl = &#39;https://ws-dev.shipcompliant.com/Services/1.2/ProductService.asmx?WSDL&#39;</code></pre>\n"],["zip1","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-zip1","()","<p>Returns the suggested zip code.\n"],["zip2","ShipCompliant::Address","classes/ShipCompliant/Address.html#method-i-zip2","()","<p>Returns the suggested zip code extension.\n"],["README","","files/README_md.html","","<p>ShipCompliant - Ruby API Client\n<p>The ShipCompliant gem is an API Client for the SOAP API provided\nby\nShipCompliant ...\n"]]}}